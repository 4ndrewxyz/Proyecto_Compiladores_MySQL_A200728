package sintactico;

import com.sun.jdi.connect.spi.Connection;
import java.io.IOException;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.table.TableModel;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import sintactico.Lexer;







/*
TEXTO POR ANALIZAR

while(a>1){
print("compiladores");
}

*/
public class Interfaz extends javax.swing.JFrame {
     public String dbName;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }
    
 

        
    public void analizarLexico() throws IOException{
        int cont = 1;
        

        String expr = (String) entrada.getText();
        Lexer lexer = new Lexer(new StringReader(expr));
        String resultado = "Linea " + cont + "\t\tSimbolo\n";
        
        
         TableModel tabla = jTable2.getModel();
       
        
        while (true) {
            Token token = lexer.yylex();
            if (token == null) {
                lexico.setText(resultado);
                return;
            }
            switch (token) {
                                           
                case CREATE->{
                    tabla.setValueAt("CREATE", 0, 0);
                    tabla.setValueAt("x", 0, 1);
                    resultado += "  <RESERVADA> \t" + lexer.lexeme + "\n";
                }
                
                case DATABASE->{
                    tabla.setValueAt("DATABASE", 1, 0);
                    tabla.setValueAt("x", 1, 1);
                    resultado += "  <RESERVADA>\t" + lexer.lexeme + "\n";
                   
                }
                
                                    
                case PUNTOCOMA ->{
                    tabla.setValueAt("; ", 3, 0);
                    tabla.setValueAt("x", 3, 5);
                    resultado += "  <PUNTO Y COMA>\t" + lexer.lexeme + "\n";
                }
             
                case NOMBRE ->{
                    String nombre = lexer.lexeme;
                    dbName = nombre;
                    tabla.setValueAt(dbName, 2, 0);
                    tabla.setValueAt("x", 2, 3);
                    tabla.setValueAt("STRING", 2, 6);
                    resultado += "  <NOMBRE DATABASE>\t" + lexer.lexeme + "\n";
                }
                            
                              
                default -> resultado += "  < " + lexer.lexeme + " >\n";
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        entrada = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        lexico = new javax.swing.JTextArea();
        btnAnalizarLex = new javax.swing.JButton();
        btnLimpiarLex = new javax.swing.JButton();
        btnAnalizarSin = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        sintax = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));

        entrada.setColumns(20);
        entrada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        entrada.setRows(5);
        jScrollPane1.setViewportView(entrada);

        lexico.setEditable(false);
        lexico.setColumns(20);
        lexico.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lexico.setRows(5);
        jScrollPane2.setViewportView(lexico);

        btnAnalizarLex.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        btnAnalizarLex.setText("Analizar Lexico");
        btnAnalizarLex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarLexActionPerformed(evt);
            }
        });

        btnLimpiarLex.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        btnLimpiarLex.setText("Limpiar Pantalla");
        btnLimpiarLex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarLexActionPerformed(evt);
            }
        });

        btnAnalizarSin.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        btnAnalizarSin.setText("Analizar Sintactico");
        btnAnalizarSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarSinActionPerformed(evt);
            }
        });

        sintax.setEditable(false);
        sintax.setColumns(20);
        sintax.setRows(5);
        jScrollPane3.setViewportView(sintax);

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel2.setText("Analizador Sintactico y Lexico Bryan Andrew Castro Valencia");

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel1.setText("Entrada");

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel3.setText("Salida");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "TOKEN", "PR", "IDENTIFICADOR", "CADENA", "NUMERO", "SIMBOLO", "TIPO"
            }
        ));
        jTable2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable2AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane5.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAnalizarLex)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAnalizarSin)
                        .addGap(131, 131, 131)
                        .addComponent(jLabel3)
                        .addGap(14, 14, 14)))
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGap(437, 437, 437)
                .addComponent(btnLimpiarLex)
                .addContainerGap(444, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAnalizarSin)
                        .addComponent(btnAnalizarLex)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiarLex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    private void btnLimpiarLexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarLexActionPerformed
        // TODO add your handling code here:
        TableModel tabla = jTable2.getModel();
        
                lexico.setText(null);
        sintax.setText(null);
        
        for (int fila = 0; fila <= 11; fila++) {
            for (int columna = 0; columna <= 6; columna++) {
                tabla.setValueAt(null, fila, columna);
            }
        }
        

    }//GEN-LAST:event_btnLimpiarLexActionPerformed

    private void btnAnalizarLexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarLexActionPerformed
        try {
            analizarLexico();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnalizarLexActionPerformed


    
    private void btnAnalizarSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarSinActionPerformed
        
        
                try {
            analizarLexico();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    String ST = entrada.getText();
    Sintax s = new Sintax(new sintactico.LexerCup(new StringReader(ST)));
        
    try {
        s.parse();
        sintax.setText("Cero errores de sintaxis! Se creo con exito la base de datos '" + dbName +"'");

        String url = "jdbc:mysql://localhost:3306/";
        String user = "root";
        String password = "5248";
        java.sql.Connection conn = java.sql.DriverManager.getConnection(url, user, password);

        Statement stmt = conn.createStatement();
        try {
            stmt.executeUpdate("CREATE DATABASE " + dbName + ";");
            sintax.setText("Se creó con éxito la base de datos '" + dbName + "'");
        } catch (SQLException e) {
            if (e.getErrorCode() == 1007) {
                sintax.setText("Error: La base de datos '" + dbName + "' ya existe");
            } else {
                sintax.setText("Error: " + e.getMessage());
            }
        } finally {
            stmt.close();
            conn.close();
        }
        
    } catch (Exception ex) {
        Symbol sym = s.getS();
        String errorMessage;
        if (sym.value == null) {
            errorMessage = "Error: se esperaba cerrar la sentencia con \";\"";;
        } else {
            switch (sym.value.toString()) {
                case "CREATE":
                    errorMessage = "Error: se esperaba DATABASE";
                    break;
                case "DATABASE":
                    errorMessage = "Error: falta el nombre de la base de datos";
                    break;
                case "NOMBRE":
                    errorMessage = "Error: falta el punto y coma al final de la sentencia";
                    break;
                case ";":
                    errorMessage = "Error: falta el nombre de la base de datos";
                    break;
                default:
                    errorMessage = "Se encontró un error en el código en la línea " + (sym.right+1) + ", columna " + (sym.left+1);
            }
        }
        sintax.setText(errorMessage);
    }
    }//GEN-LAST:event_btnAnalizarSinActionPerformed

    private void jTable2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable2AncestorAdded

    }//GEN-LAST:event_jTable2AncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizarLex;
    private javax.swing.JButton btnAnalizarSin;
    private javax.swing.JButton btnLimpiarLex;
    private javax.swing.JTextArea entrada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea lexico;
    private javax.swing.JTextArea sintax;
    // End of variables declaration//GEN-END:variables
}
